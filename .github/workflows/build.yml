name: Build, Compile & Package

on:
  workflow_dispatch:
    secrets:
      GITHUB_TOKEN:
        required: true
    inputs:
      DOCKER_OS_IMAGE:
        description: Docker Image Operating System
        required: true
        type: choice
        options:
        - alpine
        - fedora
        - ubuntu
        - arch
        default: ubuntu
      DOCKER_IMG_NAME:
        description: Docker Image Name
        required: true
        type: string
        default: cmake_compiler
      DOCKER_TAG:
        description: Docker Image Tag Name
        required: true
        type: string
        default: latest
      DOCKER_CMAKE_VERSION:
        description: Compiler Container CMake Version
        required: true
        default: 3.29.6
        
      SOURCE_CODE_URL:
        description: Source Repo URL
        required: true
        default: https://github.com/1ndev-ui/TWRP_CG65_device_tree/
      SOURCE_CODE_BRANCH:
        description: Source Repo Branch
        required: true
        default: main
      MAKE_FLAGS:
        description: Add additional make flags (Optional)
        required: false
        type: string

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: Set environment variables
      run: |
        ## Set version control variablee
        echo "WORK_WEEK=$(date "+%H:%M:%S_%m-%d-%y_ww%W.%u")" >> $GITHUB_ENV
        echo "COMMIT_HASH=$(echo "${{ github.sha }}" | cut -c1-7)" >> $GITHUB_ENV
        echo "REPO_URL=${{ github.event.inputs.SOURCE_CODE_URL }}" >> $GITHUB_ENV
        echo "REPO_BRANCH=${{ github.event.inputs.SOURCE_CODE_BRANCH }}" >> $GITHUB_ENV
        echo "REPO_NAME=$(echo ${{ github.event.inputs.SOURCE_CODE_URL }} | awk -F'/' '{ print $5 }')" >> $GITHUB_ENV

        ## Set docker container variables
        echo "DOCKER_OS_IMAGE=${{ github.event.inputs.DOCKER_OS_IMAGE }]" >> $GITHUB_ENV
        echo "DOCKER_IMG_NAME=${{ github.event.inputs.DOCKER_IMG_NAME }}" >> $GITHUB_ENV
        echo "DOCKER_TAG=${{ github.event.inputs.DOCKER_TAG }}" >> $GITHUB_ENV
        echo "CMAKE_VERSION=${{ github.event.inputs.DOCKER_CMAKE_VERSION }}" >> $GITHUB_ENV
        
    - name: Create a timestamp & set the repo's working directory
      run: |
        ## Attach a Timestamp to the Source Code's Repo Name (example: c-example-main_13:56:38_06-21-24_ww25.5_59726b5 )
        echo "REPO_NAME_TIMESTAMP=$(echo ${{ env.REPO_NAME }} | awk '{ print $1 "-" ENVIRON["REPO_BRANCH"] "_" ENVIRON["WORK_WEEK"] "_" ENVIRON["COMMIT_HASH"] }')" >> $GITHUB_ENV

        ## Source Code Repo Directory
        echo "REPO_PWD=${{ github.workspace }}/${{ env.REPO_NAME }}" >> $GITHUB_ENV

        ## Source Code Checkout (example: 1ndev-ui/c-example )
        echo "CHECKOUT_REPO=$(echo ${{ env.REPO_URL }} | awk -F 'https://github.com/' '{gsub(/\/$/, "", $2); print $2}')" >> $GITHUB_ENV
    
    - name: Self Checkout
      uses: actions/checkout@v4

    - name: Checkout Source Repo
      uses: actions/checkout@v4
      with:
        repository: ${{ env.CHECKOUT_REPO }}
        ref: ${{ env.REPO_BRANCH }}
        path: ${{ env.REPO_PWD }}
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate CMake docker image
      run: |
        docker build -t ${{ github.actor }}/${{ env.REPO_NAME }}-${{ env.REPO_BRANCH }}_${{ env.COMMIT_HASH }} --build-arg CMAKE_VERSION=${{ env.CMAKE_VERSION }} JOBS=8 .
      working-directory: ${{ github.workspace }}

    - name: Upload compiled build as an artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.REPO_NAME_TIMESTAMP }}
        path: ${{ env.REPO_PWD }}build/*

    - name: Clean Up
      if: always()
      run:  |
        cd ${{ github.workspace }}
        sudo rm -r *
        df -h
        ls -h
